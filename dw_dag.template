#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
sys.path.insert(1, "$$application_dir_path")
from datetime import datetime
import DagUtils

dagutils = reload(DagUtils)

# Airflow level imports
from airflow.models import DAG
from airflow.operators.dummy_operator import DummyOperator
from airflow.operators.python_operator import PythonOperator
from airflow.utils.trigger_rule import TriggerRule

# Name of the Dag
DAG_NAME = "$$dag_name"
PROCESS_ID = $$process_id
FREQUENCY = "$$frequency"

# Set default dag properties
default_args = {
    "owner": "ZS Associates",
    "start_date": datetime.now(),
    "provide_context": True
}

# Define the dag object
dag = DAG(
    DAG_NAME,
    default_args=default_args,
    schedule_interval=None,
)

# Create a dummy operator task
#Need to integrate nofication utility in start task
start = DummyOperator(
    task_id="start",
    dag=dag)

# Create a dummy operator task
end = DummyOperator(
    task_id="end",
    dag=dag)

emr_launch = PythonOperator(
    task_id="launch_cluster",
    python_callable=dagutils.launch_emr, provide_context=True,
    op_kwargs={"process_id": PROCESS_ID},
    dag=dag)

emr_terminate = PythonOperator(
    task_id="terminate_emr",
    python_callable=dagutils.terminate_emr,
    op_kwargs={"process_id": PROCESS_ID},
    dag=dag,trigger_rule=TriggerRule.ALL_DONE)

$$step_task_list

# Set task ordering
emr_launch.set_upstream(start)
end.set_upstream(emr_terminate)

$$step_dependency_ordering


